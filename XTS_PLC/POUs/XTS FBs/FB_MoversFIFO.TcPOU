<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_MoversFIFO" Id="{572a1ec5-69e5-4cbf-a1fe-423e145e81b8}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_MoversFIFO
VAR_INPUT
	 ax						: REFERENCE TO ARRAY [1..Tc3_XTS_Utility.TcIoXtsEnvironmentParameterList.MaxXtsMoversPerXpu] OF FB_Mover;	//Movers
	lrPartLength			: LREAL;
	lrFirstStopPosition		: LREAL;
END_VAR
VAR_OUTPUT
	nMovers					: UDINT;
END_VAR
VAR
	aMoversFIFO				: ARRAY [1..Tc3_XTS_Utility.TcIoXtsEnvironmentParameterList.MaxXtsMoversPerXpu] OF UDINT;
	aMoversFIFONull			: ARRAY [1..Tc3_XTS_Utility.TcIoXtsEnvironmentParameterList.MaxXtsMoversPerXpu] OF UDINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="m_Add" Id="{04f86155-6ec9-4846-921c-77a90f064ace}">
      <Declaration><![CDATA[METHOD m_Add : BOOL
VAR_INPUT
	udiMoverID : UDINT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[nMovers := nMovers + 1;
IF nMovers > Tc3_XTS_Utility.TcIoXtsEnvironmentParameterList.MaxXtsMoversPerXpu THEN
	nMovers := 1;
END_IF
aMoversFIFO[nMovers] := udiMoverID;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="m_Clear" Id="{7aef6e0b-b422-4afc-9089-d2f864902c8b}">
      <Declaration><![CDATA[METHOD m_Clear : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[nMovers 	:= 0;
aMoversFIFO := aMoversFIFONull;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="m_Extract" Id="{0f3f036d-34cc-4ee7-b5b9-cf0a85594c1f}">
      <Declaration><![CDATA[METHOD m_Extract : BOOL
VAR_INPUT
END_VAR
VAR_OUTPUT
	m_udiMoverID	: UDINT;
END_VAR
VAR_INST
	lrDistance 		: LREAL;
	lrMinDistance 	: LREAL;
	udiMoverID		: UDINT;
	i				: UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[//Looking for the nearest mover from station
lrMinDistance := lrPartLength;
FOR i:= 1 TO nMovers DO
	lrDistance := lrFirstStopPosition - ax[aMoversFIFO[i]].p_ModulePos;
	IF lrDistance < 0 THEN lrDistance := lrDistance + lrPartLength; END_IF
	IF lrDistance < lrMinDistance AND lrDistance >= 0 THEN lrMinDistance := lrDistance; udiMoverID := i; END_IF
END_FOR

IF udiMoverID <> 0 THEN
	m_udiMoverID := ax[aMoversFIFO[udiMoverID]].udiID;
	FOR i:= udiMoverID TO nMovers-1 DO
		aMoversFIFO[i] := aMoversFIFO[i+1];
	END_FOR
	nMovers := nMovers - 1;
	m_Extract := TRUE;
END_IF
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>